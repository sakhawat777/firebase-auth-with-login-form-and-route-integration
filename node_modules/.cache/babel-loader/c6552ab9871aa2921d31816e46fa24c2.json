{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Web Development\\\\React-Projects\\\\firebase-auth\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport FirebaseApp from './Firebase/firebase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nFirebaseApp();\n\nfunction App() {\n  const auth = getAuth();\n  const provider = new GoogleAuthProvider();\n\n  const handleSignIn = () => {\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // The signed-in user info.\n\n      const user = result.user; // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.email; // The AuthCredential type that was used.\n\n      const credential = GoogleAuthProvider.credentialFromError(error); // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignIn,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/xampp/htdocs/Web Development/React-Projects/firebase-auth/src/App.js"],"names":["React","getAuth","signInWithPopup","GoogleAuthProvider","FirebaseApp","App","auth","provider","handleSignIn","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","credentialFromError"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,QAA6D,eAA7D;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AACAA,WAAW;;AACX,SAASC,GAAT,GAAe;AACb,QAAMC,IAAI,GAAGL,OAAO,EAApB;AACA,QAAMM,QAAQ,GAAG,IAAIJ,kBAAJ,EAAjB;;AACA,QAAMK,YAAY,GAAG,MAAM;AACzBN,IAAAA,eAAe,CAACI,IAAD,EAAOC,QAAP,CAAf,CACCE,IADD,CACOC,MAAD,IAAY;AAChB;AACA,YAAMC,UAAU,GAAGR,kBAAkB,CAACS,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,YAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAHgB,CAIhB;;AACA,YAAMC,IAAI,GAAGL,MAAM,CAACK,IAApB,CALgB,CAMhB;AACD,KARD,EAQGC,KARH,CAQUC,KAAD,IAAW;AAClB;AACA,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHkB,CAIlB;;AACA,YAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB,CALkB,CAMlB;;AACA,YAAMX,UAAU,GAAGR,kBAAkB,CAACoB,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPkB,CAQlB;AACD,KAjBD;AAmBD,GApBD;;AAsBD,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACJ;AAAQ,MAAA,OAAO,EAAET,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAP;AAGA;;KA5BQH,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport './App.css';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport FirebaseApp from './Firebase/firebase.config';\nFirebaseApp();\nfunction App() {\n  const auth = getAuth();\n  const provider = new GoogleAuthProvider();\n  const handleSignIn = () => {\n    signInWithPopup(auth, provider)\n    .then((result) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      // ...\n    }).catch((error) => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n\n  }\n\n\treturn <div className=\"App\">\n    <button onClick={handleSignIn}>Sign In</button>\n  </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}